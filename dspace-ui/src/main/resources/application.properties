#
# The contents of this file are subject to the license and copyright
# detailed in the LICENSE and NOTICE files at the root of the source
# tree and available online at
#
# http://www.dspace.org/license/
#

#
# Spring Boot application.properties
#  Docs (including info on how to override these default settings)
#    http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
#  For common settings see:
#    http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
#
# TODO: Eventually would could think of "wiring" this up to use Commons Configuration as well
# See, for example: http://stackoverflow.com/questions/25271537/remote-propertysource
# and https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html

########################
# DSpace Settings
#
# DSpace installation directory
dspace.dir=C:/dspace/

# Custom Theme settings.
# This defines our default theme, which will use a CSS of this name
# For example setting to "default" just uses default.css
dspace.theme=default

# Different CSS files can be specified per path
# If this specifies a Handle of a Community or Collection, the theme will
# automatically be inherited to child objects
#
# This sample just loads "red-breadcrumb.css" (which makes the breadcrumbs bright red)
# for the 10673/2 handle AND any child objects
dspace.theme.handle.10673.2=red-breadcrumb

########################
# Spring Boot Settings
#
# Testing an "application Name"
spring.application.name = DSpaceUI


########################
# Internationalization
#
# Base Path for our messages file (i18n)
spring.messages.basename=i18n/messages
spring.messages.encoding=UTF-8

###########################
# Embedded Tomcat Settings
#
# Change application port (for embedded Tomcat)
# Spring Boot app will be available at http://localhost:[server.port]/
server.port=8080

# Context path where application should be made available
# (Optional, defaults to root context)
#server.context-path=/ui

# This creates a Tomcat context-param named "dspace.dir"
# and sets it to the value of the "dspace.dir" property (listed above)
server.context-parameters.dspace.dir=${dspace.dir}

# This creates a Tomcat context-param named "dspace-config"
# (Used by DSpaceContextListener to load the configurations)
# This is only needed in DSpace 5 or below to initialize ConfigurationManager
#server.context-parameters.dspace-config=${dspace.dir}/config/dspace.cfg

# Error handling settings
# Always include the fullstacktrace in error pages
# (Our Error page hides this stacktrace so it only is visible in HTML source)
# Can be set to "never" if you don't want it.
server.error.include-stacktrace = always

######################
# Thymeleaf settings
# http://www.thymeleaf.org/
#
# Don't cache Thymeleaf source files 
# (allows for hot refresh for easy development)
spring.thymeleaf.cache=false

######################
# Spring Boot Autoconfigure
#
# DISABLE a few autoconfiguration scripts, as DSpace configures these already
# * DataSourceAutoConfiguration (DB connection / datasource)
# * FlywayAutoConfiguration (Flyway migrations)
#
# TODO: If we go with Spring boot, we should investigate whether it's worth
# re-enabling these and removing the custom DSpace initialization code
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
                             org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration


#########################
# Spring Boot Logging levels
#
#logging.level.org.springframework.boot=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR
