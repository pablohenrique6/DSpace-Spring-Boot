#
# The contents of this file are subject to the license and copyright
# detailed in the LICENSE and NOTICE files at the root of the source
# tree and available online at
#
# http://www.dspace.org/license/
#

#
# Spring Boot application.properties
#  Docs (including info on how to override these default settings)
#    http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
#  For common settings see:
#    http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#

########################
# DSpace Settings
#
# DSpace installation directory
dspace.dir=/dspace/

########################
# Spring Boot Settings
#
# Testing an "application Name"
spring.application.name = DSpaceUI

########################
# Embedded Tomcat Settings
#
# Change application port (for embedded Tomcat)
# Spring Boot app will be available at http://localhost:[server.port]/
server.port=8082

# This creates a Tomcat context-param named "dspace.dir"
# and sets it to the value of the "dspace.dir" property (listed above)
server.context-parameters.dspace.dir=${dspace.dir}

# This creates a Tomcat context-param named "dspace-config"
# (Used by DSpaceContextListener to load the configurations)
# This is only needed in DSpace 5 or below to initialize ConfigurationManager
#server.context-parameters.dspace-config=${dspace.dir}/config/dspace.cfg

######################
# Thymeleaf settings
# http://www.thymeleaf.org/
#
# Don't cache Thymeleaf source files 
# (allows for hot refresh for easy development)
spring.thymeleaf.cache=false

######################
# Spring Boot Autoconfigure
#
# DISABLE a few autoconfiguration scripts, as DSpace configures these already
# * DataSourceAutoConfiguration (DB connection / datasource)
# * FlywayAutoConfiguration (Flyway migrations)
#
# TODO: If we go with Spring boot, we should investigate whether it's worth
# re-enabling these and removing the custom DSpace initialization code
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
                             org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration